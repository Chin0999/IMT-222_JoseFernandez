////////////// .ino /////////////////////////////

// Programa para subir con una pulsacion del 0-100 en 5 canales diferentes.
#include "funciones.h"

void setup() {
  conf();
}

void loop() {
  // Lectura de botones (activos en LOW)
  if (!digitalRead(BTNUP))   { subirVol();   delay(2000); }
  if (!digitalRead(BTNDOWN)) { bajarVol();   delay(2000); }
  if (!digitalRead(BTNCHUP)) { subirCanal(); delay(2000); }
  if (!digitalRead(BTNCHDOWN)){ bajarCanal(); delay(2000); }

  // Guardar en EEPROM si hubo cambios y pasaron 2s de inactividad
  saveIfIdle();
}

///////////////.cpp //////////////////////////////

#include "funciones.h"

uint8_t vol;
uint8_t canal;

unsigned long lastChange = 0;       // última vez que cambió algo
const unsigned long SAVE_DELAY = 2000; // 2 segundos de inactividad
uint8_t lastSavedVol;
uint8_t lastSavedCanal;

void conf(void){
  Serial.begin(BAUDRATE);
  pinMode(BTNUP, INPUT_PULLUP);
  pinMode(BTNDOWN, INPUT_PULLUP);
  pinMode(BTNCHUP, INPUT_PULLUP);
  pinMode(BTNCHDOWN, INPUT_PULLUP);

  // Leer EEPROM
  vol   = EEPROM.read(ADDR_VOL);
  canal = EEPROM.read(ADDR_CH);

  // Validar rangos
  if (vol < MINVOL || vol > MAXVOL) vol = VOL_DEF;
  if (canal < MINCH || canal > MAXCH) canal = CH_DEF;

  lastSavedVol   = vol;
  lastSavedCanal = canal;

  Serial.println(F("[INIT] Valores iniciales:"));
  printEstado();
}

void subirVol(void){
  if (vol < MAXVOL) {
    vol++;
    lastChange = millis();
    Serial.println(F("[VOL] ++"));
    printEstado();
  }
}

void bajarVol(void){
  if (vol > MINVOL) {
    vol--;
    lastChange = millis();
    Serial.println(F("[VOL] --"));
    printEstado();
  }
}

void subirCanal(void){
  canal++;
  if (canal > MAXCH) canal = MINCH;
  lastChange = millis();
  Serial.println(F("[CH] ++ (wrap)"));
  printEstado();
}

void bajarCanal(void){
  if (canal == MINCH) canal = MAXCH;
  else canal--;
  lastChange = millis();
  Serial.println(F("[CH] -- (wrap)"));
  printEstado();
}

void printEstado(){
  Serial.print(F("Volumen=")); Serial.print(vol);
  Serial.print(F("  Canal=")); Serial.println(canal);
}

void saveIfIdle(){
  if (lastChange > 0 && millis() - lastChange >= SAVE_DELAY) {
    if (vol != lastSavedVol || canal != lastSavedCanal) {
      EEPROM.update(ADDR_VOL, vol);
      EEPROM.update(ADDR_CH, canal);
      lastSavedVol   = vol;
      lastSavedCanal = canal;
      Serial.println(F("[SAVE] Valores guardados en EEPROM"));
    }
    lastChange = 0; // reinicia
  }
}

/////////.h /////////////////////////////////
#ifndef FUNCIONES_H
#define FUNCIONES_H

#include <Arduino.h>
#include <EEPROM.h>

// Botones
#define BTNUP     2
#define BTNDOWN   3
#define BTNCHUP   8
#define BTNCHDOWN 9

// Config
#define BAUDRATE  9600
#define MINVOL    0
#define MAXVOL    100
#define MINCH     1
#define MAXCH     9

// EEPROM
#define ADDR_VOL  0
#define ADDR_CH   1

// Defaults
#define VOL_DEF   50
#define CH_DEF    1

extern uint8_t vol;
extern uint8_t canal;

// Funciones
void conf(void);
void subirVol();
void bajarVol();
void subirCanal();
void bajarCanal();
void printEstado();
void saveIfIdle();

#endif